---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app redis-api
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    # defaultPodOptions:
    #   automountServiceAccountToken: false
    #   enableServiceLinks: false
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: OnRootMismatch
    #     seccompProfile: { type: RuntimeDefault }

    controllers:
      redis-api:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/astrateam-net/rest-api-redis
              tag: 2.15.3@sha256:6fce48ebb9b3252e7cd7fad97644752d8476202c7db081ac5c31b9bada10566f

      redis-commander:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/joeferner/redis-commander
              tag: latest@sha256:671436ace259bf1f5ab849c1d6dabacd2f0ebff60b6552945f6a175088169c96
            env:
              REDIS_HOST: redis-api-dragonfly.default.svc.cluster.local
              REDIS_PORT: 6379

              HTTP_USER:
                  valueFrom:
                    secretKeyRef:
                      name: &secret redis-commander-secret
                      key: HTTP_USER
              HTTP_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: HTTP_PASSWORD


    service:
      redis-api:
        controller: *app
        type: LoadBalancer
        annotations:
          lbipam.cilium.io/ips: 10.1.130.117
        ports:
          http:
            port: &port 8080
      redis-commander:
        controller: redis-commander
        ports:
          http:
            port: 8081

    route:
      app:
        hostnames: ["1cqueue.astrateam.net"]
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
      redis-mng:
        hostnames: ["redmng.astrateam.net"]
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs:
              - name: redis-commander
                port: 8081


    persistence:
      config:
        enabled: true
        type: configMap
        name: appsettings.json
        globalMounts:
          - subPath: appsettings.json
            path: /app/appsettings.json
