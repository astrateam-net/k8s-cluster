---
# yaml-language-server: $schema=https://k8s-validation-schemas.pages.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: jira
spec:
  interval: 5m
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: 2.0.4
  url: oci://ghcr.io/astrateam-net/oci-charts/jira
  verify:
    provider: cosign
    matchOIDCIdentity:
      - issuer: "^https://token.actions.githubusercontent.com$"
        subject: "^https://github.com/astrateam-net/oci-charts.*$"
---
# yaml-language-server: $schema=https://k8s-validation-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: jira
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: jira
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    fullnameOverride: jira
    replicaCount: 1
    image:
      repository: ghcr.io/astrateam-net/agile
      pullPolicy: IfNotPresent
      tag: 10.6.1
    database:
      type: postgres72
      url: "jdbc:postgresql://10.1.125.55:5000/jiraprod"
      driver: org.postgresql.Driver
      credentials:
        secretName: &jirasecret jira-credentials-secret
        usernameSecretKey: JIRA_DB_USERNAME
        passwordSecretKey: JIRA_DBUSER_PASSWORD
    volumes:
      localHome:
        customVolume:
          persistentVolumeClaim:
            create: false
            claimName: "jirasoft-local-home"
      sharedHome:
        customVolume:
          persistentVolumeClaim:
            create: false
            claimName: "jirasoft-shared-home"
        nfsPermissionFixer:
          enabled: false
    jira:
      useHelmReleaseNameAsContainerName: false
      readinessProbe:
        enabled: true
      # INFO This is a workaround to force a config update
      forceConfigUpdate: true
      # tunnel:
      #     additionalConnector:
      #       port: 8093
      tomcatConfig:
        generateByHelm: true
        secure: false
        scheme: https
        proxyName: "jira.astrateam.net"
        proxyPort: 443
        # maxHttpHeaderSize: "12288"
      resources:
        jvm:
          maxHeap: "2g"
          minHeap: "2g"
      postStart:
        command: |
          update-ca-certificates
      s3Storage:
        avatars:
          bucketName: &s3bucket jiras3
          bucketRegion: &s3region us-east-1
          endpointOverride: &s3endpoint https://s3.astrateam.net
        attachments:
          bucketName: *s3bucket
          bucketRegion: *s3region
          endpointOverride: *s3endpoint
        backups:
          bucketName: *s3bucket
          bucketRegion: *s3region
          endpointOverride: *s3endpoint
      additionalJvmArgs:
        - "-Dupm.plugin.upload.enabled=true"
        # - "-Dsecure.tunnel.upstream.port=8093"
        # - "-Datlassian.plugins.startup.options=--disable-all-addons"
        # - "-Dcom.atlassian.jira.status.index.check=false"
      # TODO S3 auth dosn't work for now when using env vars
      # [] TODO Add s3 auth
      # [] TODO Add s3 auth
      # [] TODO Add s3 auth
      # additionalEnvironmentVariables:
      #   - name: &key AWS_ACCESS_KEY_ID
      #     valueFrom:
      #       secretKeyRef:
      #         name: *jirasecret
      #         key: *key
      #   - name: &key AWS_SECRET_ACCESS_KEY
      #     valueFrom:
      #       secretKeyRef:
      #         name: *jirasecret
      #         key: *key
      additionalCertificates:
        secretName: root-ca
    additionalFiles:
      - name: jira-storage-secret
        type: secret
        key: credentials
        mountPath: /var/atlassian/application-data/jira/.aws/
      #TODO Switch minio to path based url and change crt to root ca
      - name: minio-ca
        type: secret
        key: minio.crt
        mountPath: /usr/local/share/ca-certificates/minio.crt
        readOnly: true
